name: Auto PR on branch push (with preflight checks)

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  preflight-backend:
    name: Preflight Backend Build
    runs-on: ubuntu-latest
    concurrency:
      group: auto-pr-preflight-backend-${{ github.ref_name }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - name: Maven package (skip tests)
        run: mvn -q -DskipTests package
      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: target/*.jar
          if-no-files-found: error
          retention-days: 7
  preflight-frontend:
    name: Preflight Frontend Build
    runs-on: ubuntu-latest
    concurrency:
      group: auto-pr-preflight-frontend-${{ github.ref_name }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        working-directory: frontend
        run: npm ci || npm install
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      - name: Upload frontend dist
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/**
          if-no-files-found: error
          retention-days: 7

  preflight-smoke:
    name: Preflight Smoke (API/UI up)
    runs-on: ubuntu-latest
    needs: [preflight-backend, preflight-frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - name: Start backend (Spring Boot)
        run: |
          nohup bash -c 'mvn -q -DskipTests spring-boot:run' >/tmp/backend.log 2>&1 & echo $! > /tmp/backend.pid
      - name: Wait for backend
        run: |
          for i in {1..90}; do if curl -sf http://localhost:8080/swagger-ui.html >/dev/null; then exit 0; fi; sleep 1; done; echo failed; tail -n 200 /tmp/backend.log; exit 1
      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        working-directory: frontend
        run: npm ci || npm install
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      - name: Start frontend (Vite preview)
        run: |
          nohup bash -c 'npm run --prefix frontend preview -- --host --port 5173' >/tmp/frontend.log 2>&1 & echo $! > /tmp/frontend.pid
      - name: Wait for frontend
        run: |
          for i in {1..60}; do if curl -sf http://localhost:5173 >/dev/null; then exit 0; fi; sleep 1; done; echo failed; tail -n 200 /tmp/frontend.log; exit 1
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: preflight-logs
          path: |
            /tmp/backend.log
            /tmp/frontend.log
          retention-days: 7
      - name: Cleanup
        if: always()
        run: |
          if [ -f /tmp/frontend.pid ]; then kill $(cat /tmp/frontend.pid) || true; fi
          if [ -f /tmp/backend.pid ]; then kill $(cat /tmp/backend.pid) || true; fi

  create-pr:
    name: Create/Update PR then Enable Auto-merge
    runs-on: ubuntu-latest
    needs: [preflight-backend, preflight-frontend, preflight-smoke]
    concurrency:
      group: auto-pr-${{ github.ref_name }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create or update PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
        run: |
          set -e
          echo "Branch: $BRANCH"
          PR_NUMBER=$(gh pr list --head "$BRANCH" --state open --json number -q '.[0].number' || true)
          if [ -z "$PR_NUMBER" ]; then
            TITLE="Auto PR: $BRANCH"
            BODY="This PR was automatically created from branch '$BRANCH'. Auto-merge will complete when required checks pass."
            gh pr create --base main --head "$BRANCH" --title "$TITLE" --body "$BODY" --repo "$REPO"
            PR_NUMBER=$(gh pr list --head "$BRANCH" --state open --json number -q '.[0].number')
          else
            echo "PR already exists: #$PR_NUMBER"
          fi
      - name: Update branch from base
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
        run: |
          PR_NUMBER=$(gh pr list --head "$BRANCH" --state open --json number -q '.[0].number')
          gh api -X PUT -H "Accept: application/vnd.github+json" repos/$REPO/pulls/$PR_NUMBER/update-branch || true
      - name: Enable auto-merge (merge)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
        run: |
          PR_NUMBER=$(gh pr list --head "$BRANCH" --state open --json number -q '.[0].number')
          gh pr merge "$PR_NUMBER" --auto --merge --repo "$REPO"
